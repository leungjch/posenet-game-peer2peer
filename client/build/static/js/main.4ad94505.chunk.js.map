{"version":3,"sources":["logo.svg","scripts/classes/quadtree.js","scripts/classes/player.js","scripts/classes/enemy.js","App.js","scripts/sketch.js","scripts/peerSketch.js","serviceWorker.js","index.js"],"names":["module","exports","Point","x","y","entity","this","Rectangle","w","h","point","range","Circle","r","rSquared","Math","pow","xDist","abs","yDist","edges","QuadTree","boundary","capacity","TypeError","RangeError","points","divided","ne","nw","se","sw","contains","length","push","subdivide","insert","found","intersects","p","query","Player","WIDTH","HEIGHT","hp","damageBase","damageLeft","damageRight","reactTime","react","minDims","min","leftWristX","leftWristY","leftWristR","left","leftPrev","rightWristX","rightWristY","rightWristR","right","rightPrev","headX","headY","headR","head","choose","choices","floor","random","myp5","otherp5","Enemy","icons","types","type","icon","t","orbitDistance","direction","randY","randX","randR","ceil","speed","circle","player","playerX","playerY","ang","sqrt","atan","cos","sin","d","ml5","require","sketch","video","pose","setupIntervalID","playIntervalID","listener","setupTime","playTime","triggerPlay","doneSetup","donePlay","emitScore","setupCountdownStarted","setupListeners","enemies","gotPoses","poses","skeleton","modelLoaded","console","log","setupCountDownDec","playCountDownDec","cleanup","clearInterval","setup","document","getElementById","getBoundingClientRect","scale","createCapture","VIDEO","width","height","hide","playerMode","windowHeight","window","innerHeight","createCanvas","options","imageScaleFactor","outputStride","flipHorizontal","minConfidence","maxPoseDetections","scoreThreshold","nmsRadius","detectionType","multiplier","poseNet","on","loadImage","i","draw","transparencyc","color","setAlpha","lerp","translate","image","fill","rect","pop","textSize","text","eyeR","rightEye","eyeL","leftEye","dist","nose","leftWrist","rightWrist","kineticLeft","kineticRight","maxKin","strokeWeight","stroke","line","enemy","move","qtree","headRange","rangePoints","splice","indexOf","leftRange","rightRange","leftRangePoints","rightRangePoints","nAdd","frameRate","isMulti","setInterval","cleanEnemies","map","socket","current","emit","playerHead","playerLeft","playerRight","playerHP","to","from","originalWidth","originalHeight","play","textAlign","CENTER","noStroke","finalScore","emitPeer","remove","mouseIsPressed","peerSketch","canvas","peerVideo","peerBounds","MYWIDTH","MYHEIGHT","clientWidth","clientHeight","position","top","style","data","clear","background","playerHeadx","playerHeady","playerHeadr","playerLeftx","playerLefty","playerLeftr","playerRightx","playerRighty","playerRightr","enemyIcon","enemyx","enemyy","enemyr","resizeCanvas","p5","shortid","themeDark","createMuiTheme","palette","default","primary","main","secondary","useStyles","makeStyles","theme","root","flexGrow","buttons","backgroundColor","webcamView","border","borderRadius","container","display","gridTemplateColumns","gridGap","spacing","paper","padding","whiteSpace","marginBottom","divider","margin","App","incomingUserNotification","readyButtons","UserVideo","PartnerVideo","userInactiveElement","inviteCodeElement","displayLastScore","classes","useState","yourID","setYourID","yourVideoExists","setYourVideoExists","partnerExists","setPartnerExists","yourScore","setYourScore","peerScore","setPeerScore","userInactive","setUserInactive","inviteCode","setInviteCode","requestNewRoom","setRequestNewRoom","inputInviteCode","setInputInviteCode","stream","setStream","playingSolo","setPlayingSolo","playingMulti","setPlayingMulti","playing","setPlaying","incoming","setOther","incomingAccepted","setOtherAccepted","incomingUser","setOtherUser","incomingUserSignal","setOtherUserSignal","youReady","setYouReady","otherReady","setOtherReady","youDone","setYouDone","useRef","userVideo","partnerVideo","useEffect","io","connect","navigator","mediaDevices","getUserMedia","audio","then","srcObject","signal","id","roomID","isReady","Grid","item","xs","Button","variant","marginTop","onClick","peer","Peer","initiator","trickle","Grow","in","timeout","Box","m","justify","justifyContent","ButtonGroup","size","fullWidth","aria-label","Card","class","Typography","canvas0","captureStream","flexDirection","alignItems","paddingBottom","paddingTop","marginLeft","playsInline","borderStyle","borderColor","borderWidth","muted","ref","autoPlay","transform","marginRight","Alert","severity","textTransform","clipboard","writeText","CssBaseline","className","minHeight","maxWidth","TextField","multilineColor","onChange","event","target","value","InputLabelProps","label","generate","roomToJoin","signalData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4ad94505.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","class Point {\r\n      constructor(x,y, entity) {\r\n          this.x = x\r\n          this.y = y\r\n          this.entity = entity\r\n      }\r\n  }\r\n\r\nclass Rectangle {\r\n      constructor(x,y,w,h) {\r\n          this.x = x\r\n          this.y = y \r\n          this.w = w\r\n          this.h = h\r\n      }\r\n\r\n      contains(point) {\r\n          return (point.x >= this.x - this.w &&\r\n              point.x <= this.x + this.w &&\r\n              point.y >= this.y - this.h &&\r\n              point.y <= this.y + this.h)\r\n      }\r\n\r\n      intersects(range) {\r\n          return (this.x - this.w < range.x + range.w &&\r\n                  this.x + this.w > range.x - range.w &&\r\n                  this.y - this.h < range.y + range.h  &&\r\n                  this.y + this.h > range.y - range.h )\r\n      }\r\n  }\r\n\r\nclass Circle {\r\n      constructor(x,y,r)\r\n      {\r\n          this.x = x\r\n          this.y = y\r\n          this.r = r\r\n          this.rSquared = r * r\r\n      }\r\n      contains(point) {\r\n          // check if the point is in the circle by checking if the euclidean distance of\r\n          // the point and the center of the circle if smaller or equal to the radius of\r\n          // the circle\r\n          let d = Math.pow((point.x - this.x), 2) + Math.pow((point.y - this.y), 2);\r\n          return d <= this.rSquared;\r\n        }\r\n\r\n      intersects(range) {\r\n\r\n          var xDist = Math.abs(range.x - this.x);\r\n          var yDist = Math.abs(range.y - this.y);\r\n      \r\n          // radius of the circle\r\n          var r = this.r;\r\n      \r\n          var w = range.w;\r\n          var h = range.h;\r\n      \r\n          var edges = Math.pow((xDist - w), 2) + Math.pow((yDist - h), 2);\r\n      \r\n          // no intersection\r\n          if (xDist > (r + w) || yDist > (r + h))\r\n            return false;\r\n      \r\n          // intersection within the circle\r\n          if (xDist <= w || yDist <= h)\r\n            return true;\r\n      \r\n          // intersection on the edge of the circle\r\n          return edges <= this.rSquared;\r\n        }\r\n  }\r\n\r\nclass QuadTree {\r\n      constructor(boundary, capacity) {\r\n          if (!boundary) {\r\n            throw TypeError('boundary is null or undefined');\r\n          }\r\n          if (!(boundary instanceof Rectangle)) {\r\n            throw TypeError('boundary should be a Rectangle');\r\n          }\r\n          if (typeof capacity !== 'number') {\r\n            throw TypeError(`capacity should be a number but is a ${typeof capacity}`);\r\n          }\r\n          if (capacity < 1) {\r\n            throw RangeError('capacity must be greater than 0');\r\n          }\r\n          this.boundary = boundary;\r\n          this.capacity = capacity;\r\n          this.points = [];\r\n          this.divided = false;\r\n        }\r\n      \r\n        subdivide() {\r\n          let x = this.boundary.x;\r\n          let y = this.boundary.y;\r\n          let w = this.boundary.w / 2;\r\n          let h = this.boundary.h / 2;\r\n      \r\n          let ne = new Rectangle(x + w, y - h, w, h);\r\n          this.ne = new QuadTree(ne, this.capacity);\r\n          let nw = new Rectangle(x - w, y - h, w, h);\r\n          this.nw = new QuadTree(nw, this.capacity);\r\n          let se = new Rectangle(x + w, y + h, w, h);\r\n          this.se = new QuadTree(se, this.capacity);\r\n          let sw = new Rectangle(x - w, y + h, w, h);\r\n          this.sw = new QuadTree(sw, this.capacity);\r\n      \r\n          this.divided = true;\r\n        }\r\n      \r\n        insert(point) {\r\n          if (!this.boundary.contains(point)) {\r\n            return false;\r\n          }\r\n      \r\n          if (this.points.length < this.capacity) {\r\n            this.points.push(point);\r\n            return true;\r\n          }\r\n      \r\n          if (!this.divided) {\r\n            this.subdivide();\r\n          }\r\n      \r\n          if (this.ne.insert(point) || this.nw.insert(point) ||\r\n            this.se.insert(point) || this.sw.insert(point)) {\r\n            return true;\r\n          }\r\n        }\r\n      \r\n        query(range, found) {\r\n          if (!found) {\r\n            found = [];\r\n          }\r\n      \r\n          if (!range.intersects(this.boundary)) {\r\n            return found;\r\n          }\r\n      \r\n          for (let p of this.points) {\r\n            if (range.contains(p)) {\r\n              found.push(p);\r\n            }\r\n          }\r\n          if (this.divided) {\r\n            this.nw.query(range, found);\r\n            this.ne.query(range, found);\r\n            this.sw.query(range, found);\r\n            this.se.query(range, found);\r\n          }\r\n      \r\n          return found;\r\n        }\r\n\r\n      // show() {\r\n      //     stroke(0);\r\n      //     strokeWeight(1)\r\n      //     noFill();\r\n      //     rectMode(CENTER)\r\n      //     rect(this.boundary.x, this.boundary.y, this.boundary.w * 2, this.boundary.h * 2)\r\n      //     if (this.divided) {\r\n      //         this.ne.show();\r\n      //         this.nw.show();\r\n      //         this.se.show();\r\n      //         this.sw.show();\r\n      //     }\r\n\r\n      //     for (let p of this.points) {\r\n      //         strokeWeight(4);\r\n      //         point(p.x, p.y)\r\n      //     }\r\n      // }\r\n  }\r\n\r\n  export {\r\n    Point,\r\n    Rectangle,\r\n    Circle,\r\n    QuadTree\r\n  }","import { QuadTree, Circle, Point, Rectangle } from \"./quadtree\"\r\n\r\nexport class Player {\r\n    constructor(WIDTH, HEIGHT)\r\n    {\r\n        this.hp = 100\r\n        this.damageBase = 1.05\r\n        this.damageLeft = 1.05\r\n        this.damageRight = 1.05\r\n        this.reactTime = 10 // show pain face for 10 frames\r\n        this.react = 0; // react iterator\r\n\r\n        let minDims = Math.min(WIDTH,HEIGHT);\r\n\r\n        // Set everything in the middle by default\r\n        let leftWristX = WIDTH/2\r\n        let leftWristY = HEIGHT/2\r\n        let leftWristR = minDims/4;\r\n        this.left = new Circle(leftWristX, leftWristY, leftWristR)\r\n        this.leftPrev = new Circle(leftWristX, leftWristY, leftWristR)\r\n\r\n\r\n        let rightWristX = WIDTH/2\r\n        let rightWristY = HEIGHT/2\r\n        let rightWristR = minDims/4;\r\n        this.right = new Circle(rightWristX, rightWristY, rightWristR)\r\n        this.rightPrev = new Circle(rightWristX, rightWristY, rightWristR)\r\n\r\n        let headX = WIDTH/2\r\n        let headY = HEIGHT/2\r\n        let headR = minDims/3;\r\n        this.head = new Circle(headX, headY, headR)\r\n\r\n    }\r\n}\r\n","import { QuadTree, Circle, Point, Rectangle } from \"./quadtree\"\r\nimport { minHeight } from \"@material-ui/system\";\r\n\r\n\r\nfunction choose(choices) {\r\n    var index = Math.floor(Math.random() * choices.length);\r\n    return choices[index];\r\n  }\r\n\r\n// Types: 'roamer', 'seeker', 'boss', 'shooter'\r\nexport class Enemy {\r\n    constructor(icons, WIDTH, HEIGHT)\r\n    {\r\n        this.types = ['roamer', 'seeker', 'robot']\r\n        // this.types = ['roamer']\r\n\r\n        this.type = choose(this.types);\r\n\r\n        if (this.type === 'roamer')\r\n        {\r\n            this.icon = icons['alien']\r\n            this.t = Math.random();\r\n            this.t = Math.random();\r\n\r\n            this.orbitDistance = Math.random()*WIDTH/3\r\n        }\r\n\r\n        if (this.type === 'seeker')\r\n        {\r\n            this.icon = icons['evil']\r\n        }\r\n        \r\n        if (this.type === 'robot')\r\n        {\r\n            this.icon = icons['robot']\r\n            // this.direction = choose(['left', 'up', 'down', 'rightDiag', 'leftDiag', 'right']);\r\n            this.direction = choose(['rightDiag', 'leftDiag']);\r\n\r\n        }\r\n\r\n        let minDims = Math.min(WIDTH,HEIGHT);\r\n\r\n\r\n        // Geometry\r\n        let randY = Math.floor(Math.random()*HEIGHT)\r\n        let randX = Math.floor(Math.random()*WIDTH)\r\n        let randR = Math.ceil(Math.random()*minDims/10)+16\r\n        this.speed = Math.random()*4\r\n\r\n        this.circle = new Circle(randX, randY, randR);\r\n    }\r\n    move(player)\r\n    {\r\n\r\n        let playerX = player.head.x\r\n        let playerY = player.head.y\r\n\r\n        var distance = Math.sqrt((playerX-this.circle.x)**2 + (playerY-this.circle.y)**2)\r\n        var ang = Math.atan(Math.abs(playerY-this.circle.y)/Math.abs(playerX-this.circle.x))\r\n\r\n        if (this.type === \"roamer\")\r\n        {\r\n            this.circle.x = this.orbitDistance*Math.cos(this.t) + playerX\r\n            this.circle.y = this.orbitDistance*Math.sin(this.t) + playerY\r\n            \r\n            // this.circle.x += this.speed * cos(this.t) \r\n            // this.circle.y += this.speed * sin(this.t) \r\n            this.orbitDistance += Math.sin(this.t*5)*5\r\n            this.t+=0.01\r\n            this.d += 0.001\r\n        }\r\n        else if (this.type === \"seeker\")\r\n        {\r\n                \r\n            if (this.circle.x > playerX)\r\n            {\r\n                this.circle.x -= Math.cos(ang)*this.speed\r\n            }\r\n            else\r\n            {\r\n                this.circle.x += Math.cos(ang)*this.speed\r\n            }\r\n            // If enemy is below player, move up\r\n            if (this.circle.y > playerY)\r\n            {\r\n                this.circle.y -= Math.sin(ang)*this.speed\r\n            }\r\n            else\r\n            {\r\n                this.circle.y += Math.sin(ang)*this.speed\r\n            }\r\n\r\n        }\r\n        else if (this.type === \"robot\")\r\n        {\r\n            if (this.direction === \"left\")\r\n            {\r\n                this.circle.x -= this.speed\r\n            }\r\n            else if (this.direction === \"right\")\r\n            {\r\n                this.circle.x += this.speed\r\n\r\n            }\r\n            else if (this.direction === \"up\")\r\n            {\r\n                this.circle.y -= this.speed\r\n\r\n            }\r\n            else if (this.direction === \"down\")\r\n            {\r\n                this.circle.y += this.speed\r\n\r\n            }\r\n            else if (this.direction === \"leftDiag\")\r\n            {\r\n                this.circle.x += this.speed\r\n                this.circle.y -= this.speed\r\n\r\n            }\r\n            else if (this.direction === \"rightDiag\")\r\n            {\r\n                this.circle.x -= this.speed\r\n                this.circle.y += this.speed\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        \r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState, useRef, Component } from 'react';\nimport io from \"socket.io-client\";\nimport ReactDOM from 'react-dom';\n\nimport Peer from \"simple-peer\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Grow from '@material-ui/core/Grow';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\n\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport {sketch} from \"./scripts/sketch.js\"\n\nimport {peerSketch} from \"./scripts/peerSketch.js\"\n\nimport Grid from '@material-ui/core/Grid';\n\nvar myp5;\nvar otherp5;\n\nvar p5 = require('p5');\nvar shortid = require('shortid')\n// var mySketch = require('./scripts/sketch.js')\n\nconst themeLight = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#e4f0e2\"\n    }\n  }\n});\n\nconst themeDark = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2f4e86'\n    },\n    secondary: {\n      main: '#9c2e2e'\n    },\n    background: {\n      default: '#121212'\n    },\n    text: {\n      primary: \"#ffffff\"\n    },\n  }\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  buttons: {\n    backgroundColor:\"#2c2c47\"\n  },\n  webcamView: {\n    border: 5,\n    borderRadius: 10,\n    backgroundColor:\"white\"\n  },\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, 1fr)',\n    gridGap: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: 'white',\n    backgroundColor: '#1f1f1f',\n    \n    borderRadius: \"3px\",\n    // borderWidth:\"1px\",\n    // borderStyle:\"solid\",\n    // borderColor: \"white\",\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing(1),\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\n\nexport default function App() {\n\n  const classes = useStyles();\n\n\n  const [yourID, setYourID] = useState(\"\");\n  const [yourVideoExists, setYourVideoExists] = useState(false)\n  const [partnerExists, setPartnerExists] = useState(false)\n\n  const [yourScore, setYourScore] = useState('waiting');\n  const [yourMaxScore, setYourMaxScore] = useState(0);\n\n  const [peerScore, setPeerScore] = useState('waiting');\n\n  const [userInactive, setUserInactive] = useState(false)\n\n  const [inviteCode, setInviteCode] = useState('') // Client creates an invite code\n  const [requestNewRoom, setRequestNewRoom] = useState(false);\n  const [inputInviteCode, setInputInviteCode] = useState('') // Client writing down an invite code from someone else\n\n  const [stream, setStream] = useState();\n  const [playingSolo, setPlayingSolo] = useState(false);\n  const [playingMulti, setPlayingMulti] = useState(false);\n  const [playing, setPlaying] = useState(false);\n\n  const [incoming, setOther] = useState(false) // boolean indicating whether someone is attempting to join your room\n  const [incomingAccepted, setOtherAccepted] = useState(false) // boolean indicating whether you accepted the user's request to join\n\n  const [incomingUser, setOtherUser] = useState(\"\"); // ID of the incoming user\n  const [incomingUserSignal, setOtherUserSignal] = useState(); // signal of incoming user\n\n  const [youReady, setYouReady] = useState(false); // if you are ready to play\n  const [otherReady, setOtherReady] = useState(false); // if other user is ready to play\n\n  const [youDone, setYouDone] = useState(false); // your game done (set when you receive your final score)\n  const [otherDone, setOtherDone] = useState(false); // peer done\n\n  const socket = useRef();\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n\n  var generateInvite = () => {\n    if (inviteCode === '')\n    {\n      setInviteCode(shortid.generate());\n      setRequestNewRoom(true)\n      // Send new room ID to server\n    }\n  }\n  \n  // Open a new game\n  var playSolo = () => {\n    if (!playingSolo)\n    {\n      myp5 = new p5(sketch);\n      myp5.isMulti = false;\n      myp5.socket = socket;\n      myp5.from = yourID;\n      \n      var canvas = document.getElementById('defaultCanvas0');\n      canvas.style.display=\"none\";\n      userVideo.current.srcObject = canvas.captureStream(60);\n\n      console.log(\"play game\");\n      \n      setPlayingSolo(true);\n      setPlaying(true);\n    }\n    else\n    {\n      console.log(\"already playing game\")\n    }\n  }\n\n  // Connect to a room\n  var connectRoom = () =>{\n    if (!incomingAccepted)\n    {\n      const peer = new Peer({\n        initiator: true,\n        trickle: false,\n        stream: stream,\n      });\n\n      peer.on(\"signal\", data => {\n        socket.current.emit(\"connectRoom\", {roomToJoin: inputInviteCode, signalData: data, from:yourID})\n      })\n  \n      peer.on(\"stream\", stream => {\n        if (partnerVideo.current) {\n          partnerVideo.current.srcObject = stream;\n          setPartnerExists(true);\n        }\n      })\n  \n      socket.current.on(\"acceptIncoming\", data => {\n        setOtherAccepted(true); // other user has accepted\n        setOther(false); // other user is not incoming anymore\n        setOtherUser(data.from)\n        peer.signal(data.signal);\n        console.log(\"accepted user's request\")\n      })\n    }\n  }\n\n  // You accepted the incoming user's request to join\n  var acceptIncoming = () => {\n    console.log(\"accepted join\")\n    setOtherAccepted(true);\n    setOther(false); // user accepted request, so close the incoming button\n\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream,\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"acceptIncoming\", {signal: data, roomID: inviteCode, to: incomingUser, from: yourID})\n      setOtherAccepted(true)\n      setOther(false)\n    })\n    \n    // Get stream\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream\n    });\n    setPartnerExists(true);\n\n    peer.signal(incomingUserSignal)\n  }\n\n  var handleReady = () => {\n    setYouReady(!youReady);\n  }\n\n  // Load webcam on visit site\n  useEffect( () => {\n      // Call our fetch function below once the component mounts\n\n      // Open webcam\n      if (!yourVideoExists)\n      {\n        socket.current = io.connect(\"/\");\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n          setStream(stream);\n          if (userVideo.current) {\n            userVideo.current.srcObject = stream;\n          }\n        })\n        setYourVideoExists(true);\n      }\n\n      // Listen for receiving join request\n      socket.current.on(\"hey\", (data) => {\n        if (!incomingAccepted)\n        {\n          setOther(true);\n          setOtherUser(data.from);\n          setOtherUserSignal(data.signal);\n          console.log(`User ${data.from} is joining your room`)\n        }\n      })\n        // Get your user id\n        socket.current.on(\"yourID\", (id) => {\n          // Make sure ID is set only once\n          if (yourID === \"\")\n          {\n            setYourID(id);\n            console.log('myID is', id)\n          }\n        })\n\n        socket.current.on(\"kick\", (data) => {\n          setUserInactive(true);\n          console.log(\"Someone disconnected\");\n        })\n  \n\n      // Create a new room \n      // Problem, figure out a way to prevent webcam from loading again\n      if (requestNewRoom) {\n        console.log(\"invite code is\", inviteCode)\n        socket.current.emit(\"createRoom\", {roomID: inviteCode})\n        setRequestNewRoom(false);\n      }\n    \n      socket.current.emit(\"sendReady\", {isReady: youReady, to: incomingUser, from:yourID})\n      \n      console.log(\"sending ready \", youReady, \"to \", incomingUser)\n      // Set ready feedback\n      socket.current.on(\"receiveReady\", data => {\n        console.log(\"received ready on client\")\n        setOtherReady(data.isReady);\n        })\n\n      socket.current.on(\"receiveYourScore\", (data) => {\n        console.log(\"received my score \", data.finalScore)\n        setYourScore(data.finalScore);\n\n        // myp5.remove();\n        myp5 = null;\n        if (document.getElementById(\"defaultCanvas0\"))\n        {\n          document.getElementById(\"defaultCanvas0\").remove()\n        }\n\n        // Get normal webcam stream back\n        if (!yourVideoExists) {\n          navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n            setStream(stream);\n            if (userVideo.current) {\n              userVideo.current.srcObject = stream;\n            }\n          })\n          setYourVideoExists(true);\n          }\n\n        setYouDone(true);\n        setYouReady(false);\n        setOtherReady(false);\n        setPlaying(false);\n        setPlayingSolo(false);\n        setPlayingMulti(false);\n      })\n      socket.current.on(\"receivePeerScore\", (data) => {\n        setPeerScore(data.finalScore);\n        otherp5 = null;\n        if (document.getElementById(\"defaultCanvas1\"))\n        {\n          document.getElementById(\"defaultCanvas1\").remove()\n        }\n\n        console.log(\"received peer score \", data.finalScore)\n      });\n      }, [inviteCode, youReady, otherReady]);\n\n    let incomingUserNotification;\n    if (incoming && !incomingAccepted)\n    {\n      incomingUserNotification = (\n\n        <Grid item xs = {6}>\n        <Button variant = \"contained\" color=\"secondary\" style={{marginTop:'2%'}} onClick={acceptIncoming}>Accept Join Request</Button> \n        </Grid>\n      )\n    }\n    else\n    {\n\n      incomingUserNotification = (\n        <Grid item xs = {6}>\n        </Grid>\n      )\n    }\n\n    let readyButtons;\n    // if (incomingAccepted && (!youReady || !otherReady))\n    if (incomingAccepted)\n    {\n      readyButtons = (\n        <Grow in={!playing} timeout = {1500}>\n\n        <Box width=\"50%\" m=\"auto\" justify=\"center\" justifyContent=\"center\" style={{textAlign:'center'}}>\n\n          <ButtonGroup variant=\"contained\" size=\"large\" fullWidth = {true} color=\"primary\" aria-label=\"outlined primary button group\">\n              <Button fullWidth = {true} color={youReady? \"primary\" : \"secondary\"} onClick={handleReady}>{youReady ? \"Click to Unready\" : \"Click to Ready\"} </Button>\n              <Button fullWidth = {true} color={otherReady ? \"primary\" : \"secondary\"}>{otherReady ? \"Friend Ready\" : \"Friend Not Ready\"} </Button>\n          </ButtonGroup>\n\n          <Grow in={youDone}>\n            <Card width=\"50%\" class={classes.paper} style={{borderRadius:\"10px\", marginTop:\"2%\"}}>\n              <Typography variant = \"h2\"> {yourScore!==\"waiting\" && peerScore !==\"waiting\" && yourScore > peerScore ? \"You Won! 🎉\" : yourScore!==\"waiting\" && peerScore !==\"waiting\" && yourScore < peerScore ? \"You Lost! 😢\" : \"Waiting 🕒\"} </Typography>\n              <Typography variant = \"h4\"> Your score: {yourScore === \"waiting\" ? \"Waiting\" : Math.ceil(yourScore)} </Typography>\n              <Typography variant = \"h4\"> Friend's score: {peerScore === \"waiting\" ? \"Waiting\" : Math.ceil(peerScore)} </Typography>\n            </Card>\n          </Grow>\n\n        </Box>\n        </Grow>\n\n        )\n    }\n\n    // Create game if all players are ready\n    if (youReady && otherReady && !playingMulti)  {\n\n      // Create only one canvas\n      if (!document.getElementById('defaultCanvas0')) {\n          myp5 = new p5(sketch);\n          myp5.isMulti = true;\n          myp5.to = incomingUser\n          myp5.from = yourID\n          myp5.socket = socket;\n          myp5.io = io;\n          var canvas0 = document.getElementById('defaultCanvas0');\n          canvas0.style.display=\"none\";\n          userVideo.current.srcObject = canvas0.captureStream(60);\n\n          otherp5 = new p5(peerSketch, 'partnerVideoContainer');\n          otherp5.isMulti = true;\n          otherp5.to = incomingUser\n          otherp5.from = yourID\n          otherp5.socket = socket;\n        }\n      console.log(\"making canvas\")\n\n      setPlayingMulti(true);\n      setPlaying(true);\n\n      // reset ready buttons\n      // TODO: hide UI/buttons\n    }\n  // Send your canvas graphics\n  // Retrieve other player's graphics and draw them on the other canvas\n  \n    // Conditionally render elements\n  \n  // Render user video\n  let UserVideo;\n  if (stream) {\n    UserVideo = (\n      <Box\n      display=\"flex\" \n      flexDirection=\"column\"\n      m=\"auto\"      \n      alignItems=\"center\"\n      justifyContent=\"center\"\n      > \n      <Card class={classes.paper} style ={{ padding: 5, paddingBottom: 2, paddingTop:2, display: 'inline-block', marginLeft: '0%', marginBottom:\"1px\", marginTop: '2%'}} > <Typography variant=\"h6\"> You </Typography> </Card>\n\n      <video playsInline id=\"user\" style = {{marginBottom:\"2%\", textAlign: 'center', borderStyle:\"solid\", borderRadius:'10px', borderColor:\"white\", borderWidth:\"2px\", display:'inline-block'}} muted ref={userVideo} autoPlay />\n\n      </Box>\n      );\n  }\n\n  // Render partner video\n  let PartnerVideo;\n  if (incomingAccepted)\n  {\n    PartnerVideo = (\n    <Grid item xs={ playing ? 4 : 6}>\n      <div id=\"partnerVideoContainer\">\n          <Box\n          display=\"flex\" \n          flexDirection=\"column\"\n          m=\"auto\"      \n          alignItems=\"center\"\n          justifyContent=\"center\"\n          > \n          <Card class={classes.paper} style ={{ padding: 5, paddingBottom: 2, paddingTop:2, display: 'inline-block', marginBottom:\"1px\", marginTop: '2%'}} > <Typography variant=\"h6\"> Friend </Typography> </Card>\n          <video playsInline id=\"partner\" style={{transform: 'rotateY(180deg)', marginBottom:\"2%\", textAlign: 'center', marginLeft: 'auto', marginRight: 'auto', borderStyle:\"solid\", borderRadius:'10px', borderColor:\"white\", borderWidth:\"2px\", display:'inline-block'}} ref={partnerVideo} autoPlay />\n          </Box>\n      </div>\n      </Grid>\n    );\n  }\n\n  // Conditionally render inactive alert\n  let userInactiveElement;\n  if (userInactive)\n  {\n    userInactiveElement = (\n      <Alert severity=\"error\">You've been removed for inactivity. Please reload the page to play again.</Alert>\n    )\n  }\n\n  let inviteCodeElement;\n  if (inviteCode !== '')\n  {\n    inviteCodeElement = (\n      <Button variant=\"contained\" color=\"secondary\" fullWidth={true} style={{textTransform: 'none'}} onClick={() => {navigator.clipboard.writeText(inviteCode)}}>Invite Code: {inviteCode} (Click to Copy)</Button> \n    );\n  }\n  let displayLastScore;\n  if (yourScore !== \"waiting\")\n  {\n    displayLastScore = (\n      <Card class = {classes.paper} style={{marginBottom:\"2%\"}}>\n      <Typography variant=\"h4\">Last Score: {Math.ceil(yourScore)} </Typography> \n\n    </Card>\n    )\n  }\n  else\n  {\n    displayLastScore = null;\n  }\n\n  return (\n    <MuiThemeProvider theme = {themeDark}>\n      <CssBaseline />\n    <div className={classes.root}>\n      {userInactiveElement}\n      <Grow in={yourVideoExists}>\n      <Grid\n      container\n      spacing={0}\n      padding={0}\n      justify=\"center\"\n      direction=\"row\" alignItems=\"center\"\n      style={{ minHeight: '60vh', maxWidth: '100%' }}\n      >\n          <Grid item xs={playing ? 8 : 6}>\n            {UserVideo}\n          </Grid> \n          {PartnerVideo}\n\n        </Grid>\n      </Grow>\n\n      {readyButtons}\n\n      <Grow in={!partnerExists && !playing && yourVideoExists}>\n\n      <Box\n      justifyContent=\"center\"\n      justify=\"center\"\n      width=\"50%\"\n      m=\"auto\"\n      >\n        {displayLastScore}\n\n        <Grid container spacing = {3} \n        style={{backgroundColor: \"#00224b\", borderRadius: 10, borderColor: \"#111111\", borderStyle:\"solid\", borderWidth:\"2px\"}}>\n          <Grid item xs={12}>\n          <Button onClick = {playSolo} variant=\"contained\" color=\"primary\" size=\"large\" fullWidth={true}>Play Solo</Button>\n          </Grid>\n\n          <Grid item xs = {6}>\n            <TextField id=\"filled-basic\" \n            color=\"primary\" style={{multilineColor: \"white\", backgroundColor:\"#2c2c47\", borderRadius: \"3px\", color:\"white\"}} \n            onChange={(event) => setInputInviteCode(event.target.value)} \n            fullWidth = {true} \n            InputLabelProps={{\n              style: { color: '#eeeeee' },\n            }}          \n            label=\"Enter Invite Code\" variant=\"filled\" />\n          </Grid>\n\n          <Grid item xs = {6}>\n          <Button onClick = {generateInvite} style={{height:\"100%\"}} variant=\"contained\" color=\"primary\" fullWidth={true}>Generate Invite Code</Button>\n          </Grid>\n\n          <Grid item xs = {6}>\n          <Button variant=\"contained\" onClick = {connectRoom} color=\"primary\" fullWidth={true}>Join With Invite Code</Button>\n          {incomingUserNotification}\n          </Grid>\n\n\n          <Grid item xs = {6}>\n            {inviteCodeElement}\n          </Grid>\n        </Grid>\n      </Box>\n      </Grow>\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<App />, rootElement);\n","\r\nimport { Player } from \"./classes/player\"\r\nimport { Enemy } from \"./classes/enemy\"\r\nimport { QuadTree, Circle, Point, Rectangle } from \"./classes/quadtree\"\r\nimport io from 'socket.io-client'\r\n\r\nvar p5 = require('p5');\r\nvar ml5 = require('ml5')\r\n\r\nvar sketch = function(p) {\r\n    let video;\r\n    let poseNet;\r\n    let pose;\r\n    let skeleton;\r\n\r\n    let grin;\r\n\r\n    let WIDTH; \r\n    let HEIGHT; \r\n\r\n    let scaleWidth;\r\n    let scaleHeight;\r\n\r\n    let player;\r\n\r\n    let icons;\r\n\r\n    let setupTime = 5 // 5 seconds to prepare before game starts\r\n    let playTime = 60 // 60 seconds to play game\r\n\r\n    let triggerPlay = true; // boolean that is immediately set the false when both players are both ready\r\n\r\n    let doneSetup = false;\r\n    let donePlay = false;\r\n    let emitScore = true; // boolean for sending score to server once\r\n    let setupCountdownStarted = false; // user hasn't clicked the start button\r\n    let playCountdownStarted = false; // user hasn't clicked the start button\r\n\r\n    let setupIntervalID;\r\n    let playIntervalID;\r\n\r\n    let setupListeners = true;\r\n    var listener;\r\n\r\n    let myFont;\r\n\r\n    var socket;\r\n\r\n\r\n    function checkCollision(x1, x2, y1, y2, r1, r2)\r\n    {\r\n        var distance = Math.sqrt((x1-x2)**2 + (y1-y2)**2)\r\n        if (distance <= (r1 + r2)/2)\r\n        {\r\n            return true\r\n        }\r\n        else\r\n        {\r\n            return false\r\n        }\r\n    }\r\n\r\n    let enemies = [];\r\n\r\n    function gotPoses(poses) {\r\n        //console.log(poses); \r\n        if (poses.length > 0) {\r\n            pose = poses[0].pose;\r\n            skeleton = poses[0].skeleton;\r\n\r\n            // let eX = poses[0].pose.keypoints[1].position.x;\r\n            // let eY = poses[0].pose.keypoints[1].position.y;\r\n            // player.head.x = lerp(player.head.x, nX, 0.5);\r\n            // player.head.y = lerp(player.head.y, nY, 0.5);\r\n            // eyelX = lerp(eyelX, eX, 0.5);\r\n            // eyelY = lerp(eyelY, eY, 0.5);\r\n        }\r\n    }\r\n\r\n    p.setup = function() {\r\n\r\n        var userVideo = document.getElementById(\"user\")\r\n        var userBounds = userVideo.getBoundingClientRect();\r\n\r\n\r\n        video = p.createCapture(p.VIDEO);\r\n        var scale = video.width/video.height;\r\n\r\n\r\n        video.hide();\r\n\r\n        if (p.playerMode === \"multi\")\r\n        {\r\n            // WIDTH = p.windowWidth/2;\r\n            // HEIGHT = p.windowHeight;  \r\n            // WIDTH = userVideo.clientWidth;\r\n            // HEIGHT = userVideo.clientHeight;\r\n\r\n            WIDTH = p.windowHeight * scale * 0.8;\r\n            HEIGHT = p.windowHeight * 0.8 ;\r\n            // WIDTH = 640;\r\n            // HEIGHT = 480;\r\n        }\r\n        else\r\n        {\r\n            // WIDTH = p.windowWidth;\r\n            // HEIGHT = p.windowHeight;\r\n            WIDTH = p.windowHeight * scale * 0.8;\r\n            HEIGHT = p.windowHeight * 0.8 ;\r\n            WIDTH = window.innerHeight * scale * 0.5;\r\n            HEIGHT = window.innerHeight * 0.8;\r\n            // WIDTH = 640;\r\n            // HEIGHT = 480;\r\n        }\r\n        p.createCanvas(WIDTH, HEIGHT);\r\n\r\n        player = new Player(WIDTH, HEIGHT);  \r\n        var options = options = {\r\n            imageScaleFactor: 0.1,\r\n            outputStride: 16,\r\n            flipHorizontal: false,\r\n            minConfidence: 0.5,\r\n            maxPoseDetections: 5,\r\n            scoreThreshold: 0.5,\r\n            nmsRadius: 20,\r\n            detectionType: 'single',\r\n            multiplier: 0.75,\r\n        };\r\n        // frameRate(10)\r\n\r\n        poseNet = ml5.poseNet(video, modelLoaded, options);\r\n        poseNet.on('pose', gotPoses);\r\n\r\n        scaleWidth = WIDTH/video.width;\r\n        scaleHeight = HEIGHT/video.height;\r\n\r\n        icons = {  'grin': p.loadImage('./icons/grinning_msft.png'),\r\n                    'fist': p.loadImage('./icons/fist_msft.png'),\r\n                    'evil': p.loadImage('./icons/evil_msft.png'),\r\n                    'alien': p.loadImage('./icons/alien_msft.png'),\r\n                    'pain': p.loadImage('./icons/pain_msft.png'),\r\n                    'robot': p.loadImage('./icons/robot_msft.png')\r\n        }\r\n\r\n        enemies = [];\r\n        for (var i = 0; i < 10; i++)\r\n        {\r\n            enemies.push(new Enemy(icons, WIDTH, HEIGHT))\r\n        }\r\n    }\r\n\r\n    function modelLoaded() {\r\n        console.log('poseNet ready');\r\n    }\r\n\r\n    p.draw = function() {\r\n        // Show webcam\r\n        p.push();\r\n        // Make the webcam view half transparent\r\n        var transparencyc = p.color(255,255,255);\r\n        transparencyc.setAlpha(p.lerp(64,0, setupTime/5))\r\n\r\n        p.translate(WIDTH,0);  \r\n        // We need to flip the webcam so that movement is less confusing\r\n        // We also need to scale the webcam and pose coordinates to the screen\r\n        // Flip webcam\r\n        p.scale(-1, 1); \r\n        p.image(video, 0, 0, WIDTH, HEIGHT);\r\n        p.fill(transparencyc)\r\n        p.rect(0,0, WIDTH,HEIGHT)\r\n        p.pop();\r\n        \r\n        // Play screen\r\n        if (doneSetup && !donePlay)\r\n        {\r\n            // Show timer\r\n            p.textSize(WIDTH/3)\r\n            p.text(playTime, WIDTH/3, HEIGHT/2)\r\n            play();\r\n\r\n            if (playTime <= 0)\r\n            {\r\n                doneSetup = true;\r\n                donePlay = true;\r\n            }\r\n        }\r\n        // Countdown (before playing)\r\n        else if (!doneSetup)\r\n        {\r\n            if (setupTime <= 0)\r\n            {\r\n                doneSetup = true;  \r\n                clearInterval(setupIntervalID) \r\n                \r\n                playIntervalID = setInterval(playCountDownDec, 1000);\r\n                playCountdownStarted = true\r\n\r\n            }\r\n            else if (triggerPlay && setupCountdownStarted === false)\r\n            {\r\n                setupIntervalID = setInterval(setupCountDownDec, 1000);\r\n                setupCountdownStarted = true\r\n                triggerPlay = false;\r\n            }\r\n            else if (setupCountdownStarted)\r\n            {\r\n                // Show setup countdown\r\n                p.textSize(WIDTH/4);\r\n\r\n                p.text(setupTime, WIDTH/2, HEIGHT/2)    \r\n            }\r\n            else\r\n            {\r\n                p.textAlign(p.CENTER);\r\n                p.fill(0)\r\n                p.stroke(255)\r\n                p.strokeWeight(5)\r\n\r\n                p.textSize(WIDTH/4)\r\n                p.fill(255)\r\n                p.noStroke()\r\n                p.text(\"Click to start!\", WIDTH/2, HEIGHT/2)    \r\n            }\r\n        }\r\n        // game over screen\r\n        else if (donePlay)\r\n        {\r\n            // clean up\r\n            // show score\r\n            p.textAlign(p.CENTER);\r\n            p.fill(0);\r\n            p.stroke(255);\r\n            p.strokeWeight(5);\r\n\r\n            p.textSize(WIDTH/16);\r\n            p.fill(0);\r\n            p.noStroke();\r\n            \r\n            \r\n            // p.text(\"Your score: \" + Math.ceil(player.hp), WIDTH/2, HEIGHT/2);\r\n\r\n            // p.text(\"Play again?\", WIDTH/2, 3*HEIGHT/4);\r\n\r\n            // clear countdown and reset countdown values\r\n            clearInterval(playIntervalID); \r\n            playTime = 60;\r\n            setupTime = 5;\r\n            setupCountdownStarted = false;\r\n            playCountdownStarted = false\r\n\r\n            if (emitScore)\r\n            {\r\n                if (p.isMulti)\r\n                {\r\n                    p.socket.current.emit(\"finalScore\", {finalScore: player.hp, to: p.to, from:p.from, emitPeer:true})\r\n                }\r\n                else\r\n                {\r\n                    p.socket.current.emit(\"finalScore\", {finalScore: player.hp, from: p.from, emitPeer:false})\r\n                }\r\n                cleanup();\r\n                emitScore = false;\r\n                p.remove();\r\n            }\r\n\r\n            // Start game again if mouse clicked\r\n            if (p.mouseIsPressed)\r\n            {\r\n                cleanup();\r\n\r\n                setupIntervalID = setInterval(setupCountDownDec, 1000);\r\n                setupCountdownStarted = true\r\n                doneSetup = false\r\n                donePlay = false\r\n            }\r\n        }\r\n    }\r\n\r\n    function setupCountDownDec()\r\n    {\r\n        setupTime -= 1\r\n    }\r\n    function playCountDownDec()\r\n    {\r\n        playTime -= 1\r\n    }\r\n    function init()\r\n    {\r\n\r\n    }\r\n\r\n    function cleanup()\r\n    {\r\n        // player = new Player(WIDTH, HEIGHT);\r\n        enemies = []\r\n        clearInterval(listener)\r\n    }\r\n\r\n    function play()\r\n    {\r\n        // Fetch pose\r\n        if (pose) {\r\n        // Rough depth estimation by measuring the distance in coordinates between eyes\r\n        let eyeR = pose.rightEye;\r\n        let eyeL = pose.leftEye;\r\n        let d = p.dist(eyeR.x, eyeR.y, eyeL.x, eyeL.y);\r\n        let f = 1/d;\r\n\r\n        // Flip and scale pose coordinates and store them in player\r\n        player.head.x = p.lerp(player.head.x, WIDTH - (WIDTH * pose.nose.x/video.width), 0.5);\r\n        player.head.y = p.lerp(player.head.y, HEIGHT * pose.nose.y/video.height, 0.5);\r\n        // player.head.r = d*10\r\n\r\n        player.left.x = p.lerp(player.left.x, WIDTH - (WIDTH * pose.leftWrist.x/video.width), 1)\r\n        player.left.y = p.lerp(player.left.y, HEIGHT * pose.leftWrist.y/video.height, 1)\r\n\r\n        player.right.x = p.lerp(player.right.x, WIDTH - (WIDTH * pose.rightWrist.x/video.width),1 )\r\n        player.right.y = p.lerp(player.right.y, HEIGHT * pose.rightWrist.y/video.height, 1)\r\n\r\n        // Get \"speed\" of movements\r\n        let kineticLeft = Math.sqrt((player.left.x - player.leftPrev.x)**2 + (player.left.y - player.leftPrev.y)**2)\r\n        let kineticRight = Math.sqrt((player.right.x - player.rightPrev.x)**2 + (player.right.y - player.rightPrev.y)**2)\r\n        let maxKin = Math.sqrt((WIDTH/2)**2+(HEIGHT/2)**2)\r\n        \r\n        // Draw punch effect\r\n        p.strokeWeight(kineticLeft+30)\r\n        p.stroke(255,255,255)\r\n        p.line(player.leftPrev.x, player.leftPrev.y, player.left.x, player.left.y)\r\n        p.strokeWeight(kineticRight)\r\n        p.line(player.rightPrev.x, player.rightPrev.y, player.right.x, player.right.y)\r\n\r\n        // Draw inner punch effect\r\n        p.strokeWeight(Math.floor(kineticLeft/2)+30)\r\n        p.stroke(197,255,253)\r\n        p.line(player.leftPrev.x, player.leftPrev.y, player.left.x, player.left.y)\r\n        p.strokeWeight(Math.floor(kineticRight/2)+30)\r\n        p.line(player.rightPrev.x, player.rightPrev.y, player.right.x, player.right.y)\r\n\r\n        // line(player.right.x, player.rightPrev.x, player.right.y, player.rightPrev.y)\r\n        p.strokeWeight(1)\r\n        // console.log(Math.ceil(kineticLeft/maxKin*100), Math.ceil(kineticRight/maxKin*100))\r\n        player.damageLeft  = player.damageBase + kineticLeft/maxKin*2\r\n        player.damageRight = player.damageBase + kineticRight/maxKin*2\r\n\r\n        // Update previous wrist positions\r\n        player.rightPrev.x = player.right.x\r\n        player.rightPrev.y = player.right.y\r\n\r\n        player.leftPrev.x = player.left.x\r\n        player.leftPrev.y = player.left.y\r\n        }\r\n        // for (let i = 0; i < pose.keypoints.length; i++) {\r\n        //   let x = pose.keypoints[i].position.x;\r\n        //   let y = pose.keypoints[i].position.y;\r\n        //   fill(0,255,0);\r\n        //   ellipse(x,y,16,16);\r\n        // }\r\n\r\n        // for (let i = 0; i < skeleton.length; i++) {\r\n        //     let a = skeleton[i][0];\r\n        //     let b = skeleton[i][1];\r\n        //     strokeWeight(2);\r\n        //     // stroke(255);\r\n        //     line(a.position.x, a.position.y,b.position.x,b.position.y);      \r\n        // }\r\n        p.fill(0,255,0)\r\n\r\n        // Draw the player\r\n        // Draw head\r\n        p.fill(255, 255, 0);\r\n        // ellipse(player.head.x, player.head.y, player.head.r);\r\n        p.image(icons['grin'], player.head.x-player.head.r/2, player.head.y-player.head.r/2, player.head.r, player.head.r)\r\n\r\n        // Draw HP\r\n        p.fill(0,0,0)\r\n        p.textSize(WIDTH/6)\r\n        p.text(Math.floor(player.hp), player.head.x-player.head.r/2, player.head.y-player.head.r/2)\r\n\r\n        // Draw wrists\r\n        p.fill(0, 0, 255);\r\n        // p.ellipse(player.left.x, player.left.y, player.left.r);\r\n        p.image(icons['fist'], player.left.x-player.left.r/2, player.left.y-player.left.r/2, player.left.r, player.left.r)\r\n\r\n        // p.ellipse(player.right.x, player.right.y, player.right.r);\r\n        p.image(icons['fist'], player.right.x-player.right.r/2, player.right.y-player.right.r/2, player.right.r, player.right.r)\r\n\r\n        p.fill(255, 0, 0);\r\n\r\n        // Move enemies\r\n        for (let enemy of enemies)\r\n        {\r\n            enemy.move(player)\r\n            p.image(enemy.icon, enemy.circle.x-enemy.circle.r/2, enemy.circle.y-enemy.circle.r/2, enemy.circle.r, enemy.circle.r)\r\n        }\r\n\r\n        // Build the quadtree\r\n        let boundary = new Rectangle(WIDTH/2, HEIGHT/2, WIDTH, HEIGHT);\r\n        let qtree = new QuadTree(boundary, 2);\r\n\r\n        for (let enemy of enemies) {\r\n            let point = new Point(enemy.circle.x, enemy.circle.y, enemy);\r\n            qtree.insert(point);\r\n            if (enemy.circle.x > WIDTH)\r\n            {\r\n                enemy.circle.x = 0\r\n            }\r\n            else if (enemy.circle.x < 0)\r\n            {\r\n                enemy.circle.x = WIDTH\r\n            }\r\n            if (enemy.circle.y > HEIGHT)\r\n            {\r\n                enemy.circle.y = 0\r\n            }\r\n            else if (enemy.circle.y < 0)\r\n            {\r\n                enemy.circle.y = HEIGHT\r\n            }\r\n            \r\n        }\r\n\r\n        // Query quadtree\r\n        let headRange = new Circle(player.head.x, player.head.y, player.head.r * 0.5);\r\n\r\n        let rangePoints = qtree.query(headRange); // Possible points of collision near the query\r\n        for (let point of rangePoints) {\r\n            if (player.head.contains(point))\r\n            {\r\n                p.fill(255,0,0)\r\n                p.textSize(point.entity.circle.r * 2)\r\n                p.text(\"-\" + Math.floor(player.hp), player.head.x-player.head.r/2, player.head.y-player.head.r/2)\r\n\r\n                player.hp -= point.entity.circle.r * 4\r\n\r\n                // Show pain face\r\n                p.image(icons['pain'], player.head.x-player.head.r/2, player.head.y-player.head.r/2, player.head.r, player.head.r)\r\n\r\n                // point.entity.circle.r*=1.02\r\n                enemies.splice(enemies.indexOf(point.entity),1)\r\n            }\r\n        }\r\n\r\n        let leftRange = new Circle(player.left.x, player.left.y, player.left.r * 0.5);\r\n        let rightRange = new Circle(player.right.x, player.right.y, player.right.r * 0.5);\r\n        let leftRangePoints = qtree.query(leftRange); // Possible points of collision near the query\r\n        let rightRangePoints = qtree.query(rightRange); // Possible points of collision near the query\r\n\r\n        for (let point of leftRangePoints) {\r\n            if (player.left.contains(point))\r\n            {\r\n                p.fill(0,255,0)\r\n                p.textSize(point.entity.circle.r*3)\r\n                p.text(\"+\" + Math.floor(point.entity.circle.r), player.left.x-player.left.r/2 + Math.random()*player.left.r, player.left.y-player.left.r/2 + Math.random()*player.left.r)\r\n                point.entity.circle.r/=player.damageLeft\r\n\r\n                // enemies.splice(enemies.indexOf(point.entity),1)\r\n                player.hp += point.entity.circle.r\r\n\r\n                if (point.entity.circle.r < 50)\r\n                {\r\n                    enemies.splice(enemies.indexOf(point.entity),1)\r\n                }\r\n            }\r\n        }\r\n        for (let point of rightRangePoints) {\r\n            if (player.right.contains(point))\r\n            {\r\n                p.fill(0,255,0)\r\n                p.textSize(point.entity.circle.r*3)\r\n                p.text(\"+\" + Math.floor(point.entity.circle.r), player.right.x-player.right.r/2 + Math.random()*player.right.r, player.right.y-player.right.r/2 + Math.random()*player.right.r)\r\n                point.entity.circle.r/=player.damageRight\r\n\r\n                // enemies.splice(enemies.indexOf(point.entity),1)\r\n                player.hp += point.entity.circle.r\r\n\r\n                if (point.entity.circle.r < 10)\r\n                {\r\n                    enemies.splice(enemies.indexOf(point.entity),1)\r\n                }\r\n            }\r\n        }\r\n        // qtree.show();    \r\n        if (Math.random()>0.2 && enemies.length < 300)\r\n        {\r\n            var nAdd = Math.min(60 / p.frameRate(),20); // at 60 fps, add only 1. at 10 fps, add 6. This makes it such that the game is not dependent on framerate (i.e. high framerate players don't have an advantage)\r\n            for (let i = 0; i < nAdd; i++)\r\n            {\r\n                enemies.push(new Enemy(icons, WIDTH, HEIGHT))\r\n            }\r\n        }\r\n\r\n        // Set up interval to receive and send canvas data\r\n        if (setupListeners && p.isMulti)\r\n        {\r\n            listener = setInterval(() => {\r\n                const cleanEnemies = enemies.map(({icon, ...keepAttrs}) => keepAttrs)\r\n                p.socket.current.emit(\"sendCanvas\", {playerHead: player.head, playerLeft: player.left, playerRight: player.right, playerHP: player.hp,\r\n                                                    enemies: cleanEnemies, to: p.to, from:p.from, originalWidth:WIDTH, originalHeight:HEIGHT})\r\n            }, 30);\r\n            setupListeners = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport {sketch}","import io from 'socket.io-client'\r\n\r\nvar p5 = require('p5');\r\n\r\nvar peerSketch = function(p) {\r\n    var setupListeners = true;\r\n    var canvas;\r\n    var peerVideo;\r\n    var peerBounds;\r\n    var icons;\r\n    var MYWIDTH; \r\n    var MYHEIGHT;\r\n    var setupDimsOnce = true\r\n    // connect to host\r\n\r\n    p.setup = function() {\r\n        // socket = io();\r\n        // socket.current = io.connect(\"/\");\r\n\r\n        peerVideo = document.getElementById(\"partner\")\r\n        peerBounds = peerVideo.getBoundingClientRect();\r\n\r\n        MYWIDTH = peerVideo.clientWidth;\r\n        MYHEIGHT = peerVideo.clientHeight;\r\n        console.log(\"width and height are\", MYWIDTH, MYHEIGHT)\r\n        canvas = p.createCanvas(MYWIDTH,MYHEIGHT);\r\n        console.log(\"peer dims is\", peerBounds)\r\n        canvas.position(peerBounds.left,peerBounds.top);\r\n        canvas.style('z-index', '1');\r\n\r\n        icons = {  'grin': p.loadImage('./icons/grinning_msft.png'),\r\n                    'fist': p.loadImage('./icons/fist_msft.png'),\r\n                    'evil': p.loadImage('./icons/evil_msft.png'),\r\n                    'alien': p.loadImage('./icons/alien_msft.png'),\r\n                    'pain': p.loadImage('./icons/pain_msft.png'),\r\n                    'robot': p.loadImage('./icons/robot_msft.png'),\r\n                    'cat': p.loadImage('./icons/cat_msft.png')\r\n        }\r\n    }\r\n\r\n    p.draw = function() {\r\n        // Set up interval to receive and send canvas data\r\n        if (setupListeners)\r\n        {\r\n    \r\n                p.socket.current.on(\"receiveCanvas\", (data) => {\r\n\r\n                    peerVideo = document.getElementById(\"partner\") //suspect\r\n                    peerBounds = peerVideo.getBoundingClientRect();\r\n                    canvas.position(peerBounds.left,peerBounds.top);\r\n                    canvas.style('z-index', '1');\r\n        \r\n\r\n                    console.log(\"width is\", data.originalWidth, MYWIDTH)\r\n                    // console.log(`peerCanvas: received specific message from ${data.from}`)\r\n                    // console.log(\"otherScore is\", data.hp)\r\n                    p.clear();\r\n                    \r\n                    // Draw background\r\n                    p.background('rgba(255,255,255, 0.25)')\r\n                    p.fill(255, 255, 0);\r\n\r\n                    // Draw player\r\n                    // p.ellipse(data.playerHead.x, data.playerHead.y, data.playerHead.r);\r\n                    // Show other player\r\n\r\n                    // Scale the normalized player coordinates\r\n                    var playerHeadx = data.playerHead.x / data.originalWidth * MYWIDTH;\r\n                    var playerHeady = data.playerHead.y / data.originalHeight * MYHEIGHT;\r\n                    var playerHeadr = data.playerHead.r / data.originalWidth * MYWIDTH;\r\n    \r\n                    var playerLeftx = data.playerLeft.x / data.originalWidth * MYWIDTH;\r\n                    var playerLefty = data.playerLeft.y / data.originalHeight * MYHEIGHT;\r\n                    var playerLeftr = data.playerLeft.r / data.originalWidth * MYWIDTH;\r\n    \r\n                    var playerRightx = data.playerRight.x/ data.originalWidth * MYWIDTH;\r\n                    var playerRighty = data.playerRight.y/ data.originalHeight * MYHEIGHT;\r\n                    var playerRightr = data.playerRight.r/ data.originalWidth * MYWIDTH;\r\n\r\n\r\n                    p.image(icons['cat'], playerHeadx-playerHeadr/2, playerHeady-playerHeadr/2, playerHeadr, playerHeadr)\r\n\r\n                    p.image(icons['fist'], playerLeftx-playerLeftr/2, playerLefty-playerLeftr/2, playerLeftr, playerLeftr)\r\n                    p.image(icons['fist'], playerRightx-playerRightr/2, playerRighty-playerRightr/2, playerRightr, playerRightr)\r\n            \r\n\r\n                    for (let enemy of data.enemies)\r\n                    {\r\n                        var enemyIcon;\r\n                        if (enemy.type === \"roamer\")\r\n                        {\r\n                            enemyIcon = icons['alien']\r\n                        }\r\n                        else if (enemy.type === \"seeker\")\r\n                        {\r\n                            enemyIcon = icons['evil']\r\n                        }\r\n                        else if (enemy.type === \"robot\")\r\n                        {\r\n                            enemyIcon = icons['robot']\r\n                        }\r\n                        \r\n                        // expand out normalized coordinates\r\n                        var enemyx = enemy.circle.x / data.originalWidth * MYWIDTH\r\n                        var enemyy = enemy.circle.y / data.originalHeight *MYHEIGHT\r\n                        var enemyr = enemy.circle.r / data.originalWidth * MYWIDTH\r\n\r\n                        p.image(enemyIcon, enemyx-enemyr/2, enemyy-enemyr/2, enemyr, enemyr)\r\n\r\n                        // Draw HP\r\n                        p.fill(0,0,0)\r\n                        p.textSize(100)\r\n                        p.text(Math.floor(data.playerHP), playerHeadx-playerHeadr/2, playerHeady-playerHeadr/2)\r\n            \r\n                    }\r\n                    });\r\n                p.socket.current.on(\"receivePeerScore\", (data) => {\r\n                    p.remove();\r\n                });\r\n\r\n\r\n\r\n            p.resizeCanvas(peerVideo.clientWidth, peerVideo.clientHeight)\r\n\r\n            setupListeners = false;\r\n\r\n        }\r\n    }\r\n\r\n}\r\nexport {peerSketch}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}